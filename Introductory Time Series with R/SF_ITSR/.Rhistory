best.fit <- fit
best.model <- c(p,d,q,P,D,Q)
}
}
list(best.aic, best.fit, best.model)
}
best.arima.elec <- get.best.arima( log(Elec.ts), maxord = c(2,2,2,2,2,2))
best.fit.elec <- best.arima.elec[[2]]
acf( resid(best.fit.elec) )
best.arima.elec [[3]]
get.best.arima <- function(x.ts, maxord = c(1,1,1,1,1,1))
{
best.aic <- 1e8
n <- length(x.ts)
for (p in 0:maxord[1]) for(d in 0:maxord[2]) for(q in 0:maxord[3])
for (P in 0:maxord[4]) for(D in 0:maxord[5]) for(Q in 0:maxord[6])
{
fit <- arima(x.ts,
order = c(p,d,q),
seas = list(order = c(P,D,Q),
frequency(x.ts)), method = "CSS")
fit.aic <- -2 * fit$loglik + (log(n) + 1) * length(fit$coef)
if (fit.aic < best.aic)
{
best.aic <- fit.aic
best.fit <- fit
best.model <- c(p,d,q,P,D,Q)
}
}
list(best.aic, best.fit, best.model)
}
best.arima.elec <- get.best.arima(log(Elec.ts), maxord = c(2,2,2,2,2,2))
best.fit.elec <- best.arima.elec[[2]]
acf(resid(best.fit.elec))
best.arima.elec [[3]]
get.best.arima <- function(x.ts, maxord = c(1,1,1,1,1,1))
{
best.aic <- 1e8
n <- length(x.ts)
for (p in 0:maxord[1]) for(d in 0:maxord[2]) for(q in 0:maxord[3])
for (P in 0:maxord[4]) for(D in 0:maxord[5]) for(Q in 0:maxord[6])
{
fit <- arima(x.ts,
order = c(p,d,q),
seas = list(order = c(P,D,Q),
frequency(x.ts)), method = "CSS")
fit.aic <- -2 * fit$loglik + (log(n) + 1) * length(fit$coef)
if (fit.aic < best.aic)
{
best.aic <- fit.aic
best.fit <- fit
best.model <- c(p,d,q,P,D,Q)
}
}
list(best.aic, best.fit, best.model)
}
best.arima.elec <- get.best.arima(log(Elec.ts), maxord = c(2,2,2,2,2,2))
best.fit.elec <- best.arima.elec[[2]]
acf(resid(best.fit.elec))
best.arima.elec [[3]]
ts.plot( cbind( window(Elec.ts,start = 1981),
exp(predict(best.fit.elec,12)$pred) ), lty = 1:2)
library(MASS)
data(SP500)
plot(SP500, type = ' l ' )
library(MASS)
data(SP500)
plot(SP500, type = 'l' )
acf(SP500)
acf((SP500 - mean(SP500))^2)
set.seed(1)
alpha0 <- 0.1
alpha1 <- 0.4
beta1 <- 0.2
w <- rnorm(10000)
a <- rep(0, 10000)
h <- rep(0, 10000)
for (i in 2:10000) {
h[i] <- alpha0 + alpha1 * (a[i - 1]^2) + beta1 * h[i
1]
set.seed(1)
alpha0 <- 0.1
alpha1 <- 0.4
beta1 <- 0.2
w <- rnorm(10000)
a <- rep(0, 10000)
h <- rep(0, 10000)
for (i in 2:10000) {
h[i] <- alpha0 + alpha1 * (a[i - 1]^2) + beta1 * h[i - 1]
a[i] <- w[i] * sqrt(h[i])
}
acf(a)
acf(a^2)
library(tseries)
library(tseries)
install.packages("tseries")
library(tseries)
a.garch <- garch(a, grad = "numerical", trace = FALSE)
confint(a.garch)
sp.garch <- garch(SP500, trace = F)
sp.res <- sp.garch$res[-1]
acf(sp.res)
acf(sp.res^2)
stemp <- scan("Ch07/stemp.dat")
stemp.ts <- ts(stemp, start = 1850, freq = 12)
plot(stemp.ts)
stemp.best <- get.best.arima(stemp.ts, maxord = rep(2,6))
stemp.best[[3]]
stemp.arima <- arima(stemp.ts, order = c(1,1,2),
seas = list(order = c(2,0,1), 12))
t( confint(stemp.arima) )
stemp.arima <- arima(stemp.ts, order = c(1,1,2),
seas = list(order = c(1,0,1), 12))
t( confint(stemp.arima) )
stemp.res <- resid(stemp.arima)
layout(1:2)
stemp.res <- resid(stemp.arima)
layout(1:2)
acf(stemp.res)
acf(stemp.res^2)
stemp.garch <- garch(stemp.res, trace = F)
t(confint(stemp.garch))
stemp.garch.res <- resid(stemp.garch)[-1]
acf(stemp.garch.res)
acf(stemp.garch.res^2)
cf <- rep(0,40)
d <- 0.45
cf[1] <- -d
for (i in 1:39) cf[i+1] <- -cf[i] * (d-i) / (i+1)
library(fracdiff)
install.packages("fracdiff")
library(fracdiff)
set.seed(1)
fds.sim <- fracdiff.sim(10000, ar = 0.9, d = 0.4)
x <- fds.sim$series
fds.fit <- fracdiff(x, nar = 1)
n <- length(x)
L <- 30
d <- fds.fit$d
fdc <- d
fdc[1] <- fdc
for (k in 2:L) fdc[k] <- fdc[k-1] * (d+1-k) / k
y <- rep(0, L)
for (i in (L+1):n) {
csm <- x[i]
for (j in 1:L) csm <- csm + ((-1)^j) * fdc[j] * x[i-j]
y[i] <- csm
}
y <- y[(L+1):n]
z.ar <- ar(y)
ns <- 1 + z.ar$order
z <- z.ar$res [ns:length(y)]
par(mfcol = c(2, 2))
plot(as.ts(x), ylab = "x")
acf(x) ; acf(y) ; acf(z)
summary(fds.fit)
ar(y)
layout(1:2)
set.seed(1)
x <- rnorm(2048)
spectrum(x, log = c("no"))
spectrum(x, span = 65, log = c("no"))
x.spec <- spectrum (x, span = 65, log = c("no"))
spx <- x.spec$freq / Del
spx <- x.spec$freq # Del
x.spec <- spectrum (x, span = 65, log = c("no"))
spx <- x.spec$freq # Del
spy <- 2 * x.spec$spec
plot (spx, spy, xlab = "Hz", ylab = "variance/Hz", type = "l")
set.seed(1)
x <- w <- rnorm(1024)
for (t in 2:1024) x[t]<- 0.9 * x[t-1] + w[t]
layout(1:3)
plot(as.ts(x))
acf(x)
spectrum(x, span = 51, log = c("no"))
set.seed(1)
x <- w <- rnorm(1024)
for (t in 3:1024) x[t] <- x[t-1] - 0.6 * x[t-2] + w[t]
layout (1:3)
plot (as.ts(x))
acf (x)
spectrum (x, span = 51, log = c("no"))
t <- (0:10) / 5
tc <- (0:2000) / 1000
x <- sin (2 * pi * t)
xc <- sin (2 * pi * tc)
xa <- sin (-4 * 2 * pi * tc)
plot (t, x)
lines (tc, xc)
lines (tc, xa, lty = "dashed")
www <- "Ch09/wave.dat"
wavetank.dat <- read.table(www, header=T)
www <- "Ch09/wave.dat"
wavetank.dat <- read.table(www, header=T)
attach (wavetank.dat)
layout (1:3)
plot (as.ts(waveht))
acf (waveht)
spectrum (waveht)
attach (wavetank.dat)
layout(1:2)
set.seed(1)
x <- rnorm(2048)
spectrum(x, log = c("no"))
spectrum(x, span = 65, log = c("no"))
x.spec <- spectrum (x, span = 65, log = c("no"))
spx <- x.spec$freq # Del
spy <- 2 * x.spec$spec
plot (spx, spy, xlab = "Hz", ylab = "variance/Hz", type = "l")
set.seed(1)
x <- w <- rnorm(1024)
for (t in 2:1024) x[t]<- 0.9 * x[t-1] + w[t]
layout(1:3)
plot(as.ts(x))
acf(x)
spectrum(x, span = 51, log = c("no"))
set.seed(1)
x <- w <- rnorm(1024)
for (t in 3:1024) x[t] <- x[t-1] - 0.6 * x[t-2] + w[t]
layout (1:3)
plot (as.ts(x))
acf (x)
spectrum (x, span = 51, log = c("no"))
t <- (0:10) / 5
tc <- (0:2000) / 1000
x <- sin (2 * pi * t)
xc <- sin (2 * pi * tc)
xa <- sin (-4 * 2 * pi * tc)
plot (t, x)
lines (tc, xc)
lines (tc, xa, lty = "dashed")
www <- "Ch09/wave.dat"
wavetank.dat <- read.table(www, header=T)
attach (wavetank.dat)
layout (1:3)
plot (as.ts(waveht))
acf (waveht)
spectrum (waveht)
layout(1:2)
set.seed(1)
x <- rnorm(2048)
spectrum(x, log = c("no"))
spectrum(x, span = 65, log = c("no"))
x.spec <- spectrum (x, span = 65, log = c("no"))
spx <- x.spec$freq # Del
spy <- 2 * x.spec$spec
plot (spx, spy, xlab = "Hz", ylab = "variance/Hz", type = "l")
set.seed(1)
x <- w <- rnorm(1024)
for (t in 2:1024) x[t]<- 0.9 * x[t-1] + w[t]
layout(1:3)
plot(as.ts(x))
acf(x)
spectrum(x, span = 51, log = c("no"))
set.seed(1)
x <- w <- rnorm(1024)
for (t in 3:1024) x[t] <- x[t-1] - 0.6 * x[t-2] + w[t]
layout (1:3)
plot (as.ts(x))
acf (x)
spectrum (x, span = 51, log = c("no"))
t <- (0:10) / 5
tc <- (0:2000) / 1000
x <- sin (2 * pi * t)
xc <- sin (2 * pi * tc)
xa <- sin (-4 * 2 * pi * tc)
plot (t, x)
lines (tc, xc)
lines (tc, xa, lty = "dashed")
www <- "Ch09/wave.dat"
wavetank.dat <- read.table(www, header=T)
attach (wavetank.dat)
layout (1:3)
plot (as.ts(waveht))
acf (waveht)
spectrum (waveht)
layout(1:2)
set.seed(1)
x <- rnorm(2048)
spectrum(x, log = c("no"))
spectrum(x, span = 65, log = c("no"))
x.spec <- spectrum (x, span = 65, log = c("no"))
spx <- x.spec$freq # Del
spy <- 2 * x.spec$spec
plot (spx, spy, xlab = "Hz", ylab = "variance/Hz", type = "l")
set.seed(1)
x <- w <- rnorm(1024)
for (t in 2:1024) x[t]<- 0.9 * x[t-1] + w[t]
layout(1:3)
plot(as.ts(x))
acf(x)
spectrum(x, span = 51, log = c("no"))
set.seed(1)
x <- w <- rnorm(1024)
for (t in 3:1024) x[t] <- x[t-1] - 0.6 * x[t-2] + w[t]
layout (1:3)
plot (as.ts(x))
acf (x)
spectrum (x, span = 51, log = c("no"))
t <- (0:10) / 5
tc <- (0:2000) / 1000
x <- sin (2 * pi * t)
xc <- sin (2 * pi * tc)
xa <- sin (-4 * 2 * pi * tc)
plot (t, x)
lines (tc, xc)
lines (tc, xa, lty = "dashed")
www <- "Ch09/wave.dat"
wavetank.dat <- read.table(www, header=T)
attach (wavetank.dat)
layout (1:3)
plot (as.ts(waveht))
acf (waveht)
spectrum (waveht)
www <- "Ch09/wave.dat"
wavetank.dat <- read.table(www, header=T)
# attach (wavetank.dat)
layout (1:3)
plot (as.ts(waveht))
acf (waveht)
spectrum (waveht)
www <- "Ch09/imotor.txt"
imotor.dat <- read.table(www, header = T)
www <- "Ch09/imotor.txt"
imotor.dat <- read.table(www, header = T)
attach (imotor.dat)
xg.spec <- spectrum(good, span = 9)
xb.spec <- spectrum(broken, span = 9)
freqg <- 400 * xg.spec$freq [4400:5600]
freqb <- 400 * xb.spec$freq [4400:5600]
plot(freqg, 10*log10(xg.spec$spec[4400:5600]), main = "",
xlab = "Frequency (Hz)", ylab = "Current spectrum (dB)", type="l")
lines(freqb, 10 * log10(xb.spec$spec[4400:5600]), lty = "dashed")
sd(good)
sd(broken)
www <- "Ch09/zdd.txt"
zdotdot.dat <- read.table(www, header = T)
attach (zdotdot.dat)
www <- "Ch09/vibdoswt.txt"
wt.dat <- read.table (www, header = T)
demo(plotmath)
www <- "Ch09/soi.txt"
soi.dat <- read.table(www, header = T)
attach (soi.dat)
soi.ts <- ts(SOI, st = c(1866, 1), end = c(2006, 11), fr = 12)
layout (1:3)
plot (soi.ts)
soi.spec <- spectrum( SOI, span = sqrt(2 * length(SOI)) )
plot (soi.spec$freq[1:60], soi.spec$spec[1:60], type = "l")
www <- "Ch09/pdo.txt"
pdo.dat <- read.table(www, header = T)
attach (pdo.dat)
pdo.ts <- ts( PDO, st = c(1900, 1), end = c(2007, 11), fr = 12 )
layout (1:2)
plot (pdo.ts)
spectrum( PDO, span = sqrt( 2 * length(PDO) ) )
www <- "Ch09/mprime.txt"
intr.dat <- read.table(www, header = T)
www <- "Ch09/mprime.txt"
intr.dat <- read.table(www, header = T)
attach (intr.dat)
layout (1:3)
plot (as.ts(Interest), ylab = ' Interest rate ' )
acf (Interest)
spectrum(Interest, span = sqrt(length(Interest)) / 4)
z1 <- 2 + (0+3i)
z2 <- -1 - (0+1i)
z1 - z2
z1 * z2
abs(z1)
set.seed(1)
n <- 8
x <- rnorm(n)
x
X <- fft(x)
X
set.seed(1)
n <- 8
x <- rnorm(n)
x
X <- fft(x)
X
fft(X, inverse = TRUE)/n
fq <- 2 * pi / n
frq <- 0
FL <- 0
FL [1] <- X[1]^2 / n^2
frq[1] <- 0
for ( j in 2:(n/2) ) {
FL [j] <- 2 * (X[j] * X[n+2-j]) / n^2
frq[j] <- fq * (j-1)
}
FL [n/2 + 1] <- X[n/2 + 1]^2 / n^2
frq[n/2 + 1] <- pi
m <- 1; c <- 1; k <- 16.25; Delta <- 0.01
a0 <- m / Delta^2 + c / Delta + k
a1 <- -2 * m / Delta^2 - c / Delta; a2 <- m / Delta^2
n <- 100000
y <- c(0, 0); x <- c(0, 0)
set.seed(1)
for (i in 3:n) {
x[i] <- x[i-1] - 0.5 * x[i-2] + rnorm(1)
y[i] <- (-a1 * y[i-1] - a2 * y[i-2]) / a0 + x[i] / a0
}
Sxx <- spectrum(x, span = 31)
Syy <- spectrum(y, span = 31)
Gemp <- sqrt( Syy$spec[1:5000] / Sxx$spec[1:5000] )
Freq <- Syy$freq[1:5000]
FreH <- Freq / Delta
Omeg <- 2 * pi * Freq
OmegH <- 2 * pi * FreH
Gth <- sqrt( 1/( (k-m*OmegH^2)^2 + c^2*OmegH^2 ))
Gar <- 1 / abs( 1 + a1/a0 * exp(-Omeg*1i) + a2/a0 * exp(-Omeg*2i) )
plot(FreH, Gth, xlab = "Frequency (Hz)", ylab = "Gain", type="l")
lines(FreH, Gemp, lty = "dashed")
lines(FreH, Gar, lty = "dotted")
www <- "Ch10/leg4.dat"
tug.dat <- read.table(www, header = T)
attach(tug.dat)
Heave.spec <- spectrum( Heave, span = sqrt( length(Heave) ),
log = c("no"), main = "" )
Wave.spec <- spectrum( Wave, span = sqrt( length(Heave) ),
log = c("no"), main = "" )
G <- sqrt(Heave.spec$spec/Wave.spec$spec)
par(mfcol = c(2, 2))
plot( as.ts(Wave) )
acf(Wave)
spectrum(Wave, span = sqrt(length(Heave)), log = c("no"), main = "")
plot(Heave.spec$freq, G, xlab="frequency Hz", ylab="Gain", type="l")
www <- "Ch11/cbe.dat"
CBE <- read.table(www, header = T)
www <- "Ch11/cbe.dat"
CBE <- read.table(www, header = T)
www <- "Ch11/cbe.dat"
set.seed(10); x <- rnorm(100); y <- rnorm(100)
for(i in 2:100) {
x[i] <- x[i-1] + rnorm(1)
y[i] <- y[i-1] + rnorm(1)
}
plot(x, y)
cor(x, y)
www <- "Ch11/us_rates.dat"
xrates <- read.table(www, header = T)
xrates[1:3, ]
acf( diff(xrates$UK) )
acf( diff(xrates$EU) )
plot(xrates$UK, xrates$EU, pch = 4)
cor(xrates$UK, xrates$EU)
0.946
library(tseries)
adf.test(x)
pp.test(xrates$UK)
pp.test(xrates$EU)
x <- y <- mu <- rep(0, 1000)
for (i in 2:1000) mu[i] <- mu[i - 1] + rnorm(1)
x <- mu + rnorm(1000)
y <- mu + rnorm(1000)
adf.test(x)$p.value
adf.test(y)$p.value
po.test(cbind(x, y))
po.test(cbind(xrates$UK, xrates$EU))
Phillips-Ouliaris Cointegration Test
po.test(cbind(xrates$UK, xrates$EU))
ukeu.lm <- lm(xrates$UK ~ xrates$EU)
ukeu.res <- resid(ukeu.lm)
ukeu.res.ar <- ar(ukeu.res)
ukeu.res.ar$order
AIC(arima(ukeu.res, order = c(3, 0, 0)))
AIC(arima(ukeu.res, order = c(2, 0, 0)))
AIC(arima(ukeu.res, order = c(1, 0, 0)))
AIC(arima(ukeu.res, order = c(1, 1, 0)))
library(mvtnorm)
cov.mat <- matrix(c(1, 0.8, 0.8, 1), nr = 2)
w <- rmvnorm(1000, sigma = cov.mat)
cov(w)
wx <- w[, 1]
wy <- w[, 2]
ccf(wx, wy, main = "")
Mod(polyroot(c(1, -0.5, -0.02)))
x <- y <- rep(0, 1000)
x[1] <- wx[1]
y[1] <- wy[1]
for (i in 2:1000) {
x[i] <- 0.4 * x[i - 1] + 0.3 * y[i - 1] + wx[i]
y[i] <- 0.2 * x[i - 1] + 0.1 * y[i - 1] + wy[i]
}
xy.ar <- ar(cbind(x, y))
xy.ar$ar[, , ]
library(tseries)
data(USeconomic)
US.ar <- ar(cbind(GNP, M1), method="ols", dmean=T, intercept=F)
US.ar$ar
acf(US.ar$res[-c(1:3), 1])
acf(US.ar$res[-c(1:3), 2])
library(vars)
install.packages("vars")
library(vars)
US.var <- VAR(cbind(GNP, M1), p = 3, type = "trend")
coef(US.var)
US.var <- VAR(cbind(GNP, M1), p = 2, type = "trend")
coef(US.var)
acf(resid(US.var)[, 1])
acf(resid(US.var)[, 2])
US.pred <- predict(US.var, n.ahead = 4)
US.pred
GNP.pred <- ts(US.pred$fcst$GNP[, 1], st = 1988, fr = 4)
M1.pred <- ts(US.pred$fcst$M1[, 1], st = 1988, fr = 4)
ts.plot(cbind(window(GNP, start = 1981), GNP.pred), lty = 1:2)
ts.plot(cbind(window(M1, start = 1981), M1.pred), lty = 1:2)
library(sspir)
install.packages("sspir")
